{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["'use strict';\n\n//a. Llevo a JS el ul para pintar los cocktails y lista \nconst cocktailList = document.querySelector(\".js-cocktailList\");\nconst favList = document.querySelector(\".js-favList\")\n\n//b. Llevo a JS el input para escuhar lo que busca la usuaria \nconst inputSearch = document. querySelector(\".js-input\");\nconst searchBtn = document.querySelector(\".js-searchBtn\");\n\n//c. Necesito salvar/guardar los cocktails. Pero las tengo que guardar en una variable (\"cockList = data.drinks \") para acceder en todo mi código. Va a estar vacio en inicio y tendrá valor cuando yo haga FETCH.\nlet cockList = [];\n\n//d. Creo una función (función manejadora) que escuche al input y lo FILTRE en FETCH\nfunction handleInput(event){\n  event.preventDefault();\n  const searchDrinks = inputSearch.value.toLowerCase();\n  callFetch(searchDrinks);\n}\n\nsearchBtn.addEventListener('click', handleInput);\n\n//e. Obtener los datos del servidor con fetch (creando la función callFetch) y que los pinte (aun no me lo puede pintar xq me falta la función para pintar el cocktail)\nfunction callFetch(searchDrinks) {\n    fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${searchDrinks}`)\n    .then(response => response.json())\n    .then(data => {\n    cockList = data.drinks;\n    paintCocktail();\n    });\n}\n\n//f. Tengo que crear la función para pintar/renderizar el cocktail q me refería en el punto 5, una vez que he obtenido los datos\nfunction paintCocktail() {\n  let html = '';\n  for (const drink of cockList) {\n    let classFavorite = ''; \n    //1º miro si es favorita o no, antes de pintar\n    const favoriteFoundIndex = favorites.findIndex((fav) => { \n      return fav.idDrink === drink.idDrink;\n  });\n  if(favoriteFoundIndex !== -1){\n    classFavorite = \"cocktail--favorite\";\n  }\n  else {\n    classFavorite = '';\n  }\n  //Ahora creo todo el código html\n  //classFavorite -> añade la clase de favorito en caso de que corresponda\n  html += `<li class=\"drink js-drink ${classFavorite}>\" id=${drink.idDrink}>`;\n  html += `<h3 class=\"nameDrink js-nameDrink\"> ${drink.strDrink}</h3>`;\n  html += `<img class=\"imgDrink js-imgDrink\" src=\"${drink.strDrinkThumb}\" alt=\"Cocktail\" />`;\n  html += `</li>`\n  }\n//Añado el codigo htmñ creado a la página\ncocktailList.innerHTML = html;\n//Después de modificar el html escucho de nuevo los eventos \nlistenerCocktails();\npaintFavorites(); \n}\n\n\n//g. Escuchar cuando se clica en el cocktail\nfunction listenerCocktails() {\n  const liCocktail = document.querySelectorAll('.js-drink');\n  for (const drink of liCocktail) {\n    drink.addEventListener('click', handleClicCocktail);\n  }\n}\n\n//h. Crear listado (array) de los cócteles favortios\nlet favorites =[]; \n\n//Escuchar el click y obtener el cocktail sacando el valor del id\nfunction handleClicCocktail(event) {\n  const idDrinkSelected = event.currentTarget.id;\n\n  //existe en el listado de favoritos: (map, push, filter, find, findIndex, splice)\n  //find: buscar el elemento en el listado, devuelto el elemento\n  //findIndex: buscar la posición en el listado, devuelve la posición donde está, pero si me devuelve -1\n  //splice: elimina un elemento de un listado dado el posición de donde esta , segundo parametro cuantos quiere eliminar\n\n  //Busca un cocktail en la array de todas las bebidas\n  const drinkFound = cockList.find(fav=>{\n    return fav.idDrink === idDrinkSelected;\n  });\n\n  //compruebo si el cocktail que recibo está en favoritos\n  const favoriteFoundIndex = favorites.findIndex(fav=>{\n    return fav.idDrink === idDrinkSelected;\n  });\n\n  //Si es -1 es que no lo encontró porque no está\n  if(favoriteFoundIndex === -1){\n    favorites.push(drinkFound);\n  }\n  else {\n    //eliminar de la lista de favoritos\n    favorites.splice(favoriteFoundIndex,1); \n  }\n  //i. Para que cambie las clases; cuando paint va a pintar primero pregunta si es un favorito y entonces le añade la clase o no (retrocede al punto 6)\n  paintCocktail();\n}\n  \n  //j. Esta es la funcion que pinta en favoritos segun el array\n  function paintFavorites() {\n    let html = '';\n    for (const drink of favorites) {\n      let classFavorite = ''; \n      const favoriteFoundIndex = favorites.findIndex((fav) => { \n        return fav.idDrink === drink.idDrink;\n    });\n    if(favoriteFoundIndex !== -1){\n      classFavorite = \"cocktail--favorite\";\n    } else {\n      classFavorite = '';\n    }\n    html += `<li class=\" drink js-favDrink ${classFavorite}>\" id=${drink.idDrink}>`;\n    html += `<h3 class=\"favNameDrink js-favNameDrink\"> ${drink.strDrink}</h3>`;\n    html += `<img class=\"imgDrink js-imgDrink js-favImgDrink\" src=\"${drink.strDrinkThumb}\" alt=\"Cocktail\" />`;\n    html += `</li>`;\n    }\n    favList.innerHTML = html;\n  }\n\n //**.  Obtenermos lo que hay en el Local Storage\n const listCocktailStorage = JSON.parse(localStorage.getItem('listCocktailStorage'));\n"]}